{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Projects/DJANGO + REACT/frontend/src/table_test.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport ListRowComponent from './ListRowComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'name',\n  headerName: 'Nome da Lista',\n  width: 180\n} // { field: 'lastName', headerName: 'Last name', width: 130 },\n// {\n//   field: 'age',\n//   headerName: 'Age',\n//   type: 'number',\n//   width: 90,\n// },\n// {\n//   field: 'fullName',\n//   headerName: 'Full name',\n//   description: 'This column has a value getter and is not sortable.',\n//   sortable: false,\n//   width: 160,\n//   valueGetter: (params) =>\n//     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n// },\n];\nconst rows = [{\n  id: 1,\n  lastName: 'Snow',\n  Item_name: 'Jon',\n  age: 35\n}, {\n  id: 2,\n  lastName: 'Lannister',\n  Item_name: 'Cersei',\n  age: 42\n}, {\n  id: 3,\n  lastName: 'Lannister',\n  Item_name: 'Jaime',\n  age: 45\n}, {\n  id: 4,\n  lastName: 'Stark',\n  Item_name: 'Arya',\n  age: 16\n}, {\n  id: 5,\n  lastName: 'Targaryen',\n  Item_name: 'Daenerys',\n  age: null\n}, {\n  id: 6,\n  lastName: 'Melisandre',\n  Item_name: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: 'Clifford',\n  Item_name: 'Ferrara',\n  age: 44\n}, {\n  id: 8,\n  lastName: 'Frances',\n  Item_name: 'Rossini',\n  age: 36\n}, {\n  id: 9,\n  lastName: 'Roxie',\n  Item_name: 'Harvey',\n  age: 65\n}]; // export default function DataTable() {\n//   return (\n//     <div style={{ height: 400, width: '100%' }}>\n//       <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n//     </div>\n//   );\n// }\n\nexport default class DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [],\n      loading: true,\n      token: null\n    };\n  }\n\n  async componentDidMount() {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    config.headers['Authorization'] = 'Token ' + localStorage.getItem('token'); // config.headers['Authorization'] = 'Token f0d55196016fc233de4f14c5ec899b9146cd856b' \n\n    var url = \"http://127.0.0.1:8000/list/\";\n    const response = await fetch(url, config);\n    const data = await response.json(); // console.log(data);\n\n    this.setState({\n      lists: data,\n      loading: false\n    });\n  }\n\n  render() {\n    const listsApi = this.state.lists; // const rows = [listsApi.map(list=> <ListRowComponent id={list.id} name={list.name}/>)]\n    // const rows = [{'id':'','name': ''}];\n\n    const rows = [];\n\n    for (var key in listsApi) {\n      var value = listsApi[key];\n      rows.push({\n        'id': value.id,\n        'name': value.name\n      });\n    }\n\n    console.log(rows);\n    return (\n      /*#__PURE__*/\n      // <div style={{ height: 400, width: '100%' }}>\n      //   <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n      // </div>\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows_original,\n          columns: columns,\n          pageSize: 5,\n          checkboxSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/augusto/Projects/DJANGO + REACT/frontend/src/table_test.js"],"names":["React","DataGrid","ListRowComponent","columns","field","headerName","width","rows","id","lastName","Item_name","age","DataTable","Component","state","lists","loading","token","componentDidMount","config","headers","localStorage","getItem","url","response","fetch","data","json","setState","render","listsApi","key","value","push","name","console","log","rows_original"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport ListRowComponent from './ListRowComponents';\n\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'name', headerName: 'Nome da Lista', width: 180 },\n  // { field: 'lastName', headerName: 'Last name', width: 130 },\n  // {\n  //   field: 'age',\n  //   headerName: 'Age',\n  //   type: 'number',\n  //   width: 90,\n  // },\n  // {\n  //   field: 'fullName',\n  //   headerName: 'Full name',\n  //   description: 'This column has a value getter and is not sortable.',\n  //   sortable: false,\n  //   width: 160,\n  //   valueGetter: (params) =>\n  //     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  // },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', Item_name: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', Item_name: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', Item_name: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', Item_name: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', Item_name: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', Item_name: null, age: 150 },\n  { id: 7, lastName: 'Clifford', Item_name: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', Item_name: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', Item_name: 'Harvey', age: 65 },\n];\n\n\n\n\n// export default function DataTable() {\n//   return (\n//     <div style={{ height: 400, width: '100%' }}>\n//       <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n//     </div>\n//   );\n// }\n\n\nexport default class DataTable extends React.Component {\n\n  state ={ lists: [], loading: true, token: null}\n\n\n  async componentDidMount(){\n    const config = {\n      headers: {\n          'Content-Type': 'application/json'\n        }\n    }\n    config.headers['Authorization'] = 'Token ' + localStorage.getItem('token');\n    // config.headers['Authorization'] = 'Token f0d55196016fc233de4f14c5ec899b9146cd856b' \n\n    var url = \"http://127.0.0.1:8000/list/\";\n    const response =await fetch(url,config);\n    const data = await response.json();\n    // console.log(data);\n    this.setState({lists:data,loading:false});\n\n  \n\n\n  }\n\n  render(){\n\n    const listsApi = this.state.lists;\n    // const rows = [listsApi.map(list=> <ListRowComponent id={list.id} name={list.name}/>)]\n\n    // const rows = [{'id':'','name': ''}];\n\n    const rows = [];\n\n    for( var key in listsApi){\n      var value = listsApi[key]\n      rows.push({'id':value.id,'name':value.name});\n    }\n\n    console.log(rows)\n\n\n\n    return (\n      // <div style={{ height: 400, width: '100%' }}>\n      //   <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n      // </div>\n\n            <div>\n                 <DataGrid rows={rows_original} columns={columns} pageSize={5} checkboxSelection />\n                 {/* <span>Fazendo ainda</span> */}\n            </div>\n    );\n  }\n\n  \n}"]},"metadata":{},"sourceType":"module"}