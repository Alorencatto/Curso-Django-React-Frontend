{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Projects/DJANGO + REACT/frontend/src/table_test.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport ListRowComponent from './ListRowComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'firstName',\n  headerName: 'First name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 130\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 90\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 160,\n  valueGetter: params => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`\n}];\nconst rows = [{\n  id: 1,\n  lastName: 'Snow',\n  firstName: 'Jon',\n  age: 35\n}, {\n  id: 2,\n  lastName: 'Lannister',\n  firstName: 'Cersei',\n  age: 42\n}, {\n  id: 3,\n  lastName: 'Lannister',\n  firstName: 'Jaime',\n  age: 45\n}, {\n  id: 4,\n  lastName: 'Stark',\n  firstName: 'Arya',\n  age: 16\n}, {\n  id: 5,\n  lastName: 'Targaryen',\n  firstName: 'Daenerys',\n  age: null\n}, {\n  id: 6,\n  lastName: 'Melisandre',\n  firstName: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: 'Clifford',\n  firstName: 'Ferrara',\n  age: 44\n}, {\n  id: 8,\n  lastName: 'Frances',\n  firstName: 'Rossini',\n  age: 36\n}, {\n  id: 9,\n  lastName: 'Roxie',\n  firstName: 'Harvey',\n  age: 65\n}];\nexport default function DataTable() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n} // export default class DataTable extends React.Component {\n//   state ={ lists: [], loading: true, token: null}\n//   async componentDidMount(){\n//     const config = {\n//       headers: {\n//           'Content-Type': 'application/json'\n//         }\n//     }\n//     config.headers['Authorization'] = 'Token ' + localStorage.getItem('token');\n//     // config.headers['Authorization'] = 'Token f0d55196016fc233de4f14c5ec899b9146cd856b' \n//     var url = \"http://127.0.0.1:8000/list/\";\n//     const response =await fetch(url,config);\n//     const data = await response.json();\n//     // console.log(data);\n//     this.setState({lists:data,loading:false});\n//   }\n//   render(){\n//     const columns = [\n//       { field: 'id', headerName: 'ID', width: 70 },\n//       { field: 'name', headerName: 'Nome da Lista', width: 180 },\n//     ];\n//     const rows_original = [\n//       { id: 1, name: 'Snow'},\n//       { id: 2, name: 'Lannister'},\n//       { id: 3, name: 'Lannister'}\n//     ];\n//     const listsApi = this.state.lists;\n//     // const rows = [listsApi.map(list=> <ListRowComponent id={list.id} name={list.name}/>)]\n//     // const rows = [{'id':'','name': ''}];\n//     const rows = [];\n//     for( var key in listsApi){\n//       var value = listsApi[key]\n//       rows.push({'id':value.id,'name':value.name});\n//     }\n//     console.log(rows)\n//     return (\n//       // <div style={{ height: 400, width: '100%' }}>\n//       //   <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n//       // </div>\n//             <div>\n//                  <DataGrid rows={rows_original} columns={columns}  checkboxSelection />\n//                  {/* <span>Fazendo ainda</span> */}\n//             </div>\n//     );\n//   }\n// }\n\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/augusto/Projects/DJANGO + REACT/frontend/src/table_test.js"],"names":["React","DataGrid","ListRowComponent","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","rows","id","lastName","firstName","age","DataTable","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport ListRowComponent from './ListRowComponents';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90,\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nexport default function DataTable() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n    </div>\n  );\n}\n\n\n// export default class DataTable extends React.Component {\n\n//   state ={ lists: [], loading: true, token: null}\n\n\n//   async componentDidMount(){\n//     const config = {\n//       headers: {\n//           'Content-Type': 'application/json'\n//         }\n//     }\n//     config.headers['Authorization'] = 'Token ' + localStorage.getItem('token');\n//     // config.headers['Authorization'] = 'Token f0d55196016fc233de4f14c5ec899b9146cd856b' \n\n//     var url = \"http://127.0.0.1:8000/list/\";\n//     const response =await fetch(url,config);\n//     const data = await response.json();\n//     // console.log(data);\n//     this.setState({lists:data,loading:false});\n//   }\n\n//   render(){\n\n//     const columns = [\n//       { field: 'id', headerName: 'ID', width: 70 },\n//       { field: 'name', headerName: 'Nome da Lista', width: 180 },\n//     ];\n\n//     const rows_original = [\n//       { id: 1, name: 'Snow'},\n//       { id: 2, name: 'Lannister'},\n//       { id: 3, name: 'Lannister'}\n      \n//     ];\n\n//     const listsApi = this.state.lists;\n//     // const rows = [listsApi.map(list=> <ListRowComponent id={list.id} name={list.name}/>)]\n\n//     // const rows = [{'id':'','name': ''}];\n\n//     const rows = [];\n\n//     for( var key in listsApi){\n//       var value = listsApi[key]\n//       rows.push({'id':value.id,'name':value.name});\n//     }\n\n//     console.log(rows)\n\n\n\n//     return (\n//       // <div style={{ height: 400, width: '100%' }}>\n//       //   <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n//       // </div>\n\n//             <div>\n//                  <DataGrid rows={rows_original} columns={columns}  checkboxSelection />\n//                  {/* <span>Fazendo ainda</span> */}\n//             </div>\n//     );\n//   }\n\n  \n// }"]},"metadata":{},"sourceType":"module"}